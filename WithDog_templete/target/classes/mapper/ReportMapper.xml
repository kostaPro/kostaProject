<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.mapper.ReportMapper">

	<sql id="selectAllReport">
		SELECT reportContent, reportTargetId,
		reporterId, status
		FROM eventCommnetReport_tb,
		meetingCommentReport_tb,
		meetingReport_tb,
		reviewCommentReport_tb,
		reviewReport_tb,
		spotReport_tb
	</sql>

	<insert id="createEventCommentReport" parameterType="Report">
		INSERT into
		eventCommentReport_tb (reportContent, reportTargetId,
		reporterId,
		status)
		VALUES (#{reportContent},
		#{reportTargetId},
		#{reporterId},
		#{status})
	</insert>

	<insert id="createMeetingCommentReport" parameterType="Report">
		INSERT
		into MeetingCommentReport_tb (reportContent, reportTargetId,
		reporterId, status)
		VALUES (#{reportContent},
		#{reportTargetId},
		#{reporterId}, #{status})
	</insert>

	<insert id="createMeetingReport" parameterType="Report">
		INSERT into
		MeetingReport_tb (reportContent, reportTargetId,
		reporterId, status)
		VALUES (#{reportContent},
		#{reportTargetId},
		#{reporterId}, #{status})
	</insert>

	<insert id="createReviewCommentReport" parameterType="Report">
		INSERT into
		ReviewCommentReport_tb (reportContent, reportTargetId,
		reporterId,
		status)
		VALUES (#{reportContent},
		#{reportTargetId},
		#{reporterId},
		#{status})
	</insert>

	<insert id="createReviewReport" parameterType="Report">
		INSERT into
		ReviewReport_tb (reportContent, reportTargetId,reporterId,
		status)
		VALUES (#{reportContent},
		#{reportTargetId},
		#{reporterId}, #{status})
	</insert>

	<insert id="createSpotReport" parameterType="Report">
		INSERT INTO
		spotReport_tb (reportContent, reportTargetId, reporterId, status)
		VALUES (#{reportContent}, #{reportTargetId}, #{reporterId}, #{status})
	</insert>
	
	
	<!-- 관리자가 처리상태를 수정 -->
	<update id="updateEventCommentReport" parameterType="Report">
		UPDATE
		eventCommentReport_tb
		SET status = #{status}
		WHERE
		REPORTTARGETID = #{reportTargetId}
	</update>

	<update id="updateMeetingCommentReport" parameterType="Report">
		UPDATE
		meetingCommentReport_tb
		SET status = #{status}
		WHERE
		REPORTTARGETID = #{reportTargetId}
	</update>

	<update id="updateMeetingReport" parameterType="Report">
		UPDATE
		meetingReport_tb
		SET status = #{status}
		WHERE
		REPORTTARGETID = #{reportTargetId}
	</update>

	<update id="updateReviewCommentReport" parameterType="Report">
		UPDATE
		reviewCommentReport_tb
		SET status = #{status}
		WHERE
		REPORTTARGETID = #{reportTargetId}
	</update>

	<update id="updateReviewReport" parameterType="Report">
		UPDATE
		ReviewReport_tb
		SET status = #{status}
		WHERE
		REPORTTARGETID = #{reportTargetId}
	</update>

	<update id="updateSpotReport" parameterType="Report">
		UPDATE spotReport_tb
		SET status = #{status, jdbcType=VARCHAR}
		WHERE
		REPORTTARGETID = #{reportTargetId}
	</update>




	<delete id="deleteEventCommentReport" parameterType="integer">
		DELETE from
		eventCommentReport_tb
		WHERE REPORTTARGETID = #{reportTargetId}
	</delete>

	<delete id="deleteMeetingCommentReport" parameterType="integer">
		DELETE
		from meetingCommentReport_tb
		WHERE REPORTTARGETID = #{reportTargetId}
	</delete>

	<delete id="deleteMeetingReport" parameterType="integer">
		DELETE from
		meetingReport_tb
		WHERE REPORTTARGETID = #{reportTargetId}
	</delete>

	<delete id="deleteReviewCommentReport" parameterType="integer">
		DELETE from
		reviewCommentReport_tb
		WHERE REPORTTARGETID = #{reportTargetId}
	</delete>

	<delete id="deleteReviewReport" parameterType="integer">
		DELETE from
		reviewReport_tb
		WHERE REPORTTARGETID = #{reportTargetId}
	</delete>

	<delete id="deleteSpotReport" parameterType="integer">
		DELETE from
		spotReport_tb
		WHERE REPORTTARGETID = #{reportTargetId}
	</delete>




	<select id="retrieveAllReports" resultType="Report">
		SELECT
		reportContent,reportTargetId,reporterId,status FROM
		eventCommentReport_tb
		UNION
		SELECT
		reportContent,reportTargetId,reporterId,status FROM
		meetingCommentReport_tb
		UNION
		SELECT
		reportContent,reportTargetId,reporterId,status FROM
		meetingReport_tb
		UNION
		SELECT reportContent,reportTargetId,reporterId,status FROM
		reviewCommentReport_tb
		UNION
		SELECT
		reportContent,reportTargetId,reporterId,status FROM
		reviewReport_tb
		UNION
		SELECT reportContent,reportTargetId,reporterId,status FROM
		spotReport_tb
	</select>

	<!-- user가 본인이 신고한 신고들 보기 -->
	<select id="retrieveReportsByReporterId" parameterType="String"
		resultType="Report">
		SELECT reportContent, reportTargetId, status
		FROM eventCommentReport_tb WHERE reporterId =
		#{reporterId}

		UNION

		SELECT
		reportContent, reportTargetId, status FROM
		meetingCommentReport_tb WHERE reporterId =
		#{reporterId}

		UNION

		SELECT
		reportContent, reportTargetId, status FROM
		meetingReport_tb WHERE reporterId =
		#{reporterId}

		UNION

		SELECT
		reportContent, reportTargetId, status FROM
		reviewCommentReport_tb WHERE reporterId =
		#{reporterId}

		UNION

		SELECT
		reportContent, reportTargetId, status FROM
		reviewReport_tb
		WHERE reporterId =
		#{reporterId}

		UNION

		SELECT reportContent,
		reportTargetId, status FROM
		spotReport_tb WHERE reporterId
		= #{reporterId}
	</select>

	<!-- 모임/장소/댓글/평가글에 따라서 조회 -->
	<select id="retrieveReportsByReportType" parameterType="Map"
		resultType="Report">
		SELECT reportContent, reportTargetId,reporterId, status
		<if test="reportType == 'spot'">
			From spotReport_tb
		</if>
		<if test="reportType == 'meeting'">
			From meetingReport_tb
		</if>
		<if test="reportType == 'review'">
			From reviewReport_tb
		</if>
		<if test="reportType == 'comment'">
			From reviewCommentReport_tb

			UNION

			SELECT reportContent,
			reportTargetId,reporterId, status
			From EventCommentReport_tb

			UNION

			SELECT reportContent, reportTargetId,reporterId, status
			From
			meetingCommentReport_tb
		</if>
	</select>



	<!-- 범죄자 이력 조회 : 무슨 무슨 신고 당했나 -->
	<select id="retrieveReportsBySuspectId" parameterType="String"
		resultType="Report">
		SELECT
		eventCommentReport_tb.reportTargetId,
		eventCommentReport_tb.reportContent, eventCommentReport_tb.status
		FROM
		eventCommentReport_tb
		INNER JOIN eventComment_tb
		ON
		eventComment_tb.eventCommentId = eventCommentReport_tb.reportTargetId
		WHERE eventComment_tb.writerId = #{suspectId}


		UNION

		SELECT
		meetingCommentReport_tb.reportTargetId, meetingCommentReport_tb.reportContent,
		meetingCommentReport_tb.status
		FROM meetingCommentReport_tb
		INNER JOIN
		meetingComment_tb
		ON meetingComment_tb.meetingCommentId =
		meetingCommentReport_tb.reportTargetId
		WHERE meetingComment_tb.writerId
		= #{suspectId}


		UNION

		SELECT meetingReport_tb.reportTargetId,
		meetingReport_tb.reportContent,
		meetingReport_tb.status
		FROM
		meetingReport_tb
		INNER JOIN meeting_tb
		ON meeting_tb.meetingId =
		meetingReport_tb.reportTargetId
		WHERE meeting_tb.hostId = #{suspectId}


		UNION

		SELECT reviewCommentReport_tb.reportTargetId,
		reviewCommentReport_tb.reportContent,
		reviewCommentReport_tb.status
		FROM reviewCommentReport_tb
		INNER JOIN reviewComment_tb
		ON
		reviewComment_tb.reviewCommentId =
		reviewCommentReport_tb.reportTargetId
		WHERE reviewComment_tb.writerId =
		#{suspectId}

		UNION

		SELECT spotReport_tb.reportTargetId,
		spotReport_tb.reportContent, spotReport_tb.status
		FROM spotReport_tb
		INNER JOIN spot_tb
		ON spot_tb.spotId = spotReport_tb.reportTargetId
		WHERE spot_tb.registerId = #{suspectId}

	</select>

	<!-- 범죄자 Id와 경고횟수 조회 -->
	<select id="retrieveBlackList" resultType="BlackList">
	
		SELECT writerId as suspectId, count(*) count
		FROM eventComment_tb
		JOIN eventCommentReport_tb
		ON
		eventComment_tb.eventCommentId = eventCommentReport_tb.reportTargetId
		WHERE EVENTCOMMENTID IN
		(SELECT eventCommentReport_tb.reportTargetId
		FROM eventCommentReport_tb
		INNER JOIN eventComment_tb
		ON
		eventComment_tb.eventCommentId = eventCommentReport_tb.reportTargetId
		WHERE eventCommentReport_tb.status='O'
		)
		GROUP BY writerId, status
        
		UNION

		SELECT hostId as suspectId, count(*) count
		FROM meeting_tb
		JOIN meetingReport_tb
		ON
		meeting_tb.meetingId = meetingReport_tb.reportTargetId
		WHERE MEETINGID
		IN
		(SELECT meetingReport_tb.reportTargetId
		FROM meetingReport_tb
		INNER
		JOIN meeting_tb
		ON
		meeting_tb.meetingId =
		meetingReport_tb.reportTargetId
		WHERE meetingReport_tb.status='O'
		)
		GROUP BY hostId, status

		UNION

		SELECT writerId as suspectId, count(*) count
		FROM
		meetingComment_tb
		JOIN meetingCommentReport_tb
		ON
		meetingComment_tb.meetingId = meetingCommentReport_tb.reportTargetId
		WHERE MEETINGCommentID IN
		(SELECT
		MEETINGCommentReport_tb.reportTargetId
		FROM meetingCommentReport_tb
		INNER JOIN meetingComment_tb
		ON
		meetingComment_tb.meetingCommentId =
		meetingCommentReport_tb.reportTargetId
		WHERE
		meetingCommentReport_tb.status='O'
		)
		GROUP BY writerId, status

		UNION

		SELECT writerId as suspectId, count(*) count
		FROM reviewComment_tb
		JOIN
		reviewCommentReport_tb
		ON reviewComment_tb.reviewId =
		reviewCommentReport_tb.reportTargetId
		WHERE reviewCommentID IN
		(SELECT
		reviewCommentReport_tb.reportTargetId
		FROM reviewCommentReport_tb
		INNER
		JOIN reviewComment_tb
		ON
		reviewComment_tb.reviewCommentId =
		reviewCommentReport_tb.reportTargetId
		WHERE
		reviewCommentReport_tb.status='O'
		)
		GROUP BY writerId, status

		UNION

		SELECT writerId as suspectId, count(*) count
		FROM review_tb
		JOIN reviewReport_tb
		ON
		review_tb.reviewId = reviewReport_tb.reportTargetId
		WHERE reviewID IN
		(SELECT reviewReport_tb.reportTargetId
		FROM reviewReport_tb
		INNER JOIN
		review_tb
		ON
		review_tb.reviewId = reviewReport_tb.reportTargetId
		WHERE
		reviewReport_tb.status='O'
		)
		GROUP BY writerId, status

		UNION

		SELECT
		registerId as suspectId, count(*) count
		FROM spot_tb
		JOIN spotReport_tb
		ON
		spot_tb.spotId = spotReport_tb.reportTargetId
		WHERE spotID IN
		(SELECT
		spotReport_tb.reportTargetId
		FROM spotReport_tb
		INNER JOIN spot_tb
		ON
		spot_tb.spotId = spotReport_tb.reportTargetId
		WHERE
		spotReport_tb.status='O'
		)
		GROUP BY registerId, status
	</select>
	
	<!-- 1개의 report 조회 -->
	<select id="retrieveReport" parameterType="integer" resultType="Report">
		SELECT reportContent, reportTargetId, reporterId, status
		FROM eventCommentReport_tb
		WHERE reportTargetId = #{reportTargetId}
		
		UNION
		
		SELECT reportContent, reportTargetId, reporterId, status
		FROM meetingCommentReport_tb
		WHERE reportTargetId = #{reportTargetId}
		
		UNION
		
		SELECT reportContent, reportTargetId, reporterId, status
		FROM meetingReport_tb
		WHERE reportTargetId = #{reportTargetId}
		
		UNION
		
		SELECT reportContent, reportTargetId, reporterId, status 
		FROM reviewCommentReport_tb
		WHERE reportTargetId = #{reportTargetId}
		
		UNION
		
		SELECT reportContent, reportTargetId, reporterId, status
		FROM reviewReport_tb
		WHERE reportTargetId = #{reportTargetId}
		
		UNION
		
		SELECT reportContent, reportTargetId, reporterId, status
		FROM spotReport_tb
		WHERE reportTargetId = #{reportTargetId}
	</select>

</mapper>