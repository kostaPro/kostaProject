<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="store.mapper.EventMapper">

	<resultMap type="Event" id="EventMap">
		<result property="eventId" column="EVENTID" />
		<result property="eventName" column="EVENTNAME" />
		<result property="eventImage" column="EVENTIMAGE" />
		<result property="openDate" column="OPENDATE" />
		<result property="closeDate" column="CLOSEDATE" />
		<result property="eventInfo" column="EVENTINFO" />

		<association property="eventSpot" column="SPOTID"
			select="store.mapper.SpotMapper.retrieveSpotBySpotId" javaType="Spot"
			jdbcType="NUMERIC" />

		<collection property="commentList" column="eventId" ofType="Comment"
			select="store.mapper.CommentMapper.retrieveCommentsByEventId"
			javaType="ArrayList" jdbcType="NUMERIC" />
	</resultMap>

	<sql id="selectEvent">
		select eventId, eventName, eventSpotId, eventImage,
		openDate, closeDate, eventInfo
		from event_tb
	</sql>

	<insert id="createEvent" parameterType="Event">
		<selectKey keyProperty="eventId" resultType="integer" order="BEFORE">
			SELECT event_seq.nextval FROM dual
		</selectKey>
		INSERT INTO
		EVENT_TB(EVENTID, EVENTNAME, EVENTSPOTID, EVENTIMAGE,
		OPENDATE,
		CLOSEDATE, EVENTINFO)
		VALUES (#{eventId}, #{eventName},
		#{eventSpot.spotId},
		#{eventImage}, #{openDate}, #{closeDate},
		#{eventInfo})
	</insert>

	<select id="retrieveAllEvents" resultType="Event">
		<include refid="selectEvent"></include>
	</select>

	<select id="retrieveEventsByLocation" parameterType="String"
		resultType="Event">
		SELECT eventId, eventName, eventSpotId, eventImage,
		openDate, closeDate, eventInfo
		FROM event_tb INNER JOIN spot_tb
		ON
		event_tb.eventSpotId = spot_tb.spotId
		WHERE spot_tb.spotLocation like
		#{location}
	</select>

	<select id="retrieveEventsByDate" parameterType="Date" resultType="Event">
		<include refid="selectEvent"></include>
		WHERE OPENDATE = #{date}
	</select>

	<select id="retrieveEventsByDateLocation" parameterType="Map"
		resultType="Event">
		select eventId, eventName, eventSpotId, eventImage,
		openDate, closeDate, eventInfo
		from event_tb JOIN spot_tb
		on
		event_tb.eventSpotId = spot_tb.spotId
		WHERE OPENDATE = #{date} and
		spot_tb.spotLocation like #{location}
	</select>

	<select id="retrieveEventByEventId" parameterType="integer"
		resultMap="EventMap">
		<include refid="selectEvent"></include>
		WHERE EVENTID = #{eventId}
	</select>

	<update id="updateEvent" parameterType="Event">
		UPDATE event_tb
		SET
		EVENTSPOTID = #{eventSpot.spotId}, EVENTINFO = #{eventInfo}
		WHERE
		EVENTID = #{eventId}
	</update>

	<delete id="deleteEvent" parameterType="integer">
		DELETE FROM event_tb
		WHERE EVENTID = #{eventId}
	</delete>

	<insert id="joinEventMeeting" parameterType="Map">
		INSERT into
		joinEvent_tb
		VALUES(#{eventId},#{guestId},#{date})
	</insert>

	<delete id="cancelEventMeeting" parameterType="Map">
		DELETE FROM
		joinEvent_tb
		WHERE EVENTID = #{eventId} AND GUESTID = #{guestId} AND
		JOINDATE = #{date}
	</delete>

	<delete id="cancelAllEventMeeting" parameterType="integer">
		DELETE FROM
		joinEvent_tb
		WHERE eventId = #{eventId}
	</delete>

	<select id="retrieveJoinListByEventDate" parameterType="Map"
		resultType="Event">
		select guestId
		from joinEvent_tb
		WHERE EVENTID = #{eventId}
		and JOINDATE = #{eventDate}
	</select>

</mapper>